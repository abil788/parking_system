"""Initial migration

Revision ID: 732b65457787
Revises: 
Create Date: 2025-10-04 14:48:06.819623

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '732b65457787'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cards',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('card_uid', sa.String(length=100), nullable=False),
    sa.Column('owner_name', sa.String(length=200), nullable=False),
    sa.Column('vehicle_plate', sa.String(length=20), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'BLOCKED', 'LOST', name='cardstatus'), nullable=False),
    sa.Column('issued_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cards_card_uid'), 'cards', ['card_uid'], unique=True)
    op.create_table('readers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('type', sa.Enum('ENTRY', 'EXIT', name='readertype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'OFFLINE', name='readerstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('hashed_password', sa.String(length=200), nullable=False),
    sa.Column('role', sa.Enum('SUPERADMIN', 'OPERATOR', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('access_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('card_id', sa.UUID(), nullable=True),
    sa.Column('reader_id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('action', sa.Enum('ENTER', 'EXIT', name='accessaction'), nullable=False),
    sa.Column('result', sa.Enum('GRANTED', 'DENIED', name='accessresult'), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reader_id'], ['readers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_access_logs_timestamp'), 'access_logs', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_access_logs_timestamp'), table_name='access_logs')
    op.drop_table('access_logs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('readers')
    op.drop_index(op.f('ix_cards_card_uid'), table_name='cards')
    op.drop_table('cards')
    # ### end Alembic commands ###
